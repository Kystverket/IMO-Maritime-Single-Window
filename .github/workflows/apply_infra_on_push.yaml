name: Apply On Push Infrastructure Terraform

on:
  push:
    branches: 
      - terraform-modules
    paths:
      - 'terraform/**'
      - '.github/workflows/**'

  workflow_dispatch:
    inputs:
      workspace:
        description: 'Terraform workspace to use'
        required: true
        default: 'dev-preview'

permissions:
  id-token: write
  contents: read
  
jobs:
    terraform:
      name: 'Terraform'
      runs-on: ubuntu-latest
      environment: dev-preview
      env:
        ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
        ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
        ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
        ARM_USE_OIDC: "true"
        TF_WORKSPACE: ${{ github.event.inputs.workspace || 'dev'}}

      defaults:
        run:
          shell: bash
          working-directory: ./terraform
  
      steps:
        - name: Checkout
          uses: actions/checkout@v4
  
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v3
          with:
            terraform_version: 1.x
        
        - name: Az CLI login using OIDC
          uses: azure/login@v2
          with:
            client-id: ${{ vars.ARM_CLIENT_ID }}
            tenant-id: ${{ vars.ARM_TENANT_ID }}
            subscription-id: ${{ vars.ARM_SUBSCRIPTION_ID }}
        
        - name: Set environment variables based on workspace
          id: set-env
          run: |
            if [ "${{ github.event.inputs.workspace }}" == "prod" ]; then
              echo "STATE_RESOURCE_GROUP_NAME=rg-imo-msw-terraform-prod" >> $GITHUB_ENV
              echo "STATE_STORAGE_ACCOUNT_NAME=stimomswterraformprod" >> $GITHUB_ENV
              echo "LOCATION=norwayeast" >> $GITHUB_ENV
            else
              echo "STATE_RESOURCE_GROUP_NAME=rg-imo-msw-terraform-dev-preview" >> $GITHUB_ENV
              echo "STATE_STORAGE_ACCOUNT_NAME=stimomswterraform" >> $GITHUB_ENV
              echo "LOCATION=norwayeast" >> $GITHUB_ENV
            fi

        - name: Update .env.backend file
          id: update-env-backend
          run: |
            echo "TF_VAR_state_resource_group_name=$STATE_RESOURCE_GROUP_NAME" > ../.env.backend
            echo "TF_VAR_state_storage_account_name=$STATE_STORAGE_ACCOUNT_NAME" >> ../.env.backend
            echo "TF_VAR_location=$LOCATION" >> ../.env.backend
        
        - name: Terraform init
          id: init
          run: |
            set -a 
            source ../.env.backend
            if ! terraform workspace list | grep -q "${{ env.TF_WORKSPACE }}"; then
            terraform workspace new ${{ env.TF_WORKSPACE }}
            fi
            terraform init -upgrade -reconfigure  \
              -backend-config="resource_group_name=$TF_VAR_state_resource_group_name" \
              -backend-config="storage_account_name=$TF_VAR_state_storage_account_name"
  
        - name: Terraform validate
          id: validate
          run: terraform validate -no-color
  
        - name: Terraform plan
          id: plan
          run: terraform plan -no-color
      
        - name: Terraform apply
          id: apply
          run: terraform apply -auto-approve
  